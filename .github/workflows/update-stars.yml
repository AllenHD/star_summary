name: Update Starred Projects

on:
  schedule:
    - cron: '0 6 * * *'  # 每天早上6点运行
  workflow_dispatch:  # 手动触发
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'config.yaml'
      - 'requirements.txt'
      - '.github/workflows/update-stars.yml'

jobs:
  update-stars:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # 允许写入仓库内容
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        
    - name: Verify installation
      run: |
        star-summary --version || echo "Version command not available"
        star-summary status
        
    - name: Run star summary
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        star-summary generate --format both --verbose
        
    - name: Generate API data
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python -c "
        import sys
        sys.path.append('src')
        from src.config.settings import Config
        from src.github_api.service import GitHubService
        from src.classifier.classifier import ProjectClassifier
        from src.generator.api import DataAPI
        
        # 加载配置
        config = Config('config.yaml')
        
        # 获取项目并分类
        github_service = GitHubService(config)
        repos = github_service.fetch_starred_repos()
        classifier = ProjectClassifier(config.config)
        
        classified_repos = []
        for repo in repos:
            classified_repo = classifier.classify_repo(repo)
            classified_repos.append(classified_repo)
        
        # 生成API数据
        api = DataAPI(classified_repos)
        api.save_api_data('output/api.json')
        print('API数据生成完成')
        "
        
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet HEAD -- output/; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "No changes detected in output directory"
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected in output directory"
          git diff --stat HEAD -- output/
        fi
        
    - name: Commit and push changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add output/
        git commit -m "Auto-update starred projects [$(date '+%Y-%m-%d %H:%M UTC')]"
        git push
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: star-summary-output
        path: output/
        retention-days: 7
        
    - name: Create summary (on manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "Manual trigger completed successfully"
        echo "Generated files:" 
        ls -la output/
        echo "Commit SHA: ${{ github.sha }}"
        echo "Run number: ${{ github.run_number }}"

  # 可选：部署到GitHub Pages
  deploy-pages:
    runs-on: ubuntu-latest
    needs: update-stars
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: star-summary-output
        path: output/
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: output/
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
